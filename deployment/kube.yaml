
apiVersion: v1
kind: Namespace
metadata:
  name: chat-tenant-server

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-tenant-server-deployment
  namespace: chat-tenant-server
spec:
  selector:
    matchLabels:
      component: tenant-server
  template:
    metadata:
      labels:
        component: tenant-server
    spec:
      serviceAccount: chat-tenant-server
      containers:
      - image: quay.io/hown3d/chat-tenant-server:v0.0.1
        name: chat-tenant-server
        securityContext:
          runAsUser: 999
          runAsGroup: 999 
        resources:
          requests:
            cpu: "20m"
            memory: "55M"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:10000"]
          initialDelaySeconds: 5
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:10000"]
          initialDelaySeconds: 10
        ports:
        - containerPort:  10000
          name:  grpc
        - containerPort: 10001
          name: gateway
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: chat-tenant-server
  namespace: chat-tenant-server

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: chat-tenant-server
rules:
# TODO: only create rbac, other stuff should be created by the app itself
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["create","delete", "update", "patch", "get", "watch", "list"]
- apiGroups: ["cert-manager.io"]
  resources: ["issuers"]
  verbs: ["create","delete", "update", "patch", "get", "watch", "list"]
- apiGroups: [""]
  resources: ["secrets", "namespaces", "resourcequotas"]
  verbs: ["create","delete", "update", "patch", "get", "watch", "list"]


---

apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: ClusterRoleBinding
metadata:
  name: chat-tenant-server
subjects:
# You can specify more than one "subject"
- kind: ServiceAccount
  name: chat-tenant-server
  namespace: chat-tenant-server
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: ClusterRole #this must be Role or ClusterRole
  name: chat-tenant-server # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io